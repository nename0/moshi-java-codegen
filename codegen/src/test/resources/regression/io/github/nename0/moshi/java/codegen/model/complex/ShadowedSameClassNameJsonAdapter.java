// Code generated by moshi-java-codegen. Do not edit.
package io.github.nename0.moshi.java.codegen.model.complex;

import com.squareup.moshi.JsonAdapter;
import com.squareup.moshi.JsonReader;
import com.squareup.moshi.JsonWriter;
import com.squareup.moshi.Moshi;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.SuppressWarnings;
import java.util.Collections;

@SuppressWarnings("unused")
public final class ShadowedSameClassNameJsonAdapter extends JsonAdapter<ShadowedSameClassName> {
  private static final JsonReader.Options OPTIONS = JsonReader.Options.of("renamed", "same");

  private final JsonAdapter<Integer> adapter_same_io_github_nename0_moshi_java_codegen_model_complex_ShadowedSameClassName;

  private final JsonAdapter<Integer> adapter_same_io_github_nename0_moshi_java_codegen_model_complex_other_ShadowedSameClassName;

  public ShadowedSameClassNameJsonAdapter(Moshi moshi) {
    adapter_same_io_github_nename0_moshi_java_codegen_model_complex_ShadowedSameClassName = moshi.adapter(int.class,
        Collections.emptySet(), "renamed");
    adapter_same_io_github_nename0_moshi_java_codegen_model_complex_other_ShadowedSameClassName = moshi.adapter(int.class,
        Collections.emptySet(), "same");
  }

  @Override
  public ShadowedSameClassName fromJson(JsonReader reader) throws IOException {
    ShadowedSameClassName instance = new ShadowedSameClassName();
    reader.beginObject();
    while (reader.hasNext()) {
      int index = reader.selectName(OPTIONS);
      switch (index) {
        case -1:
          reader.skipName();
          reader.skipValue();
          break;
        case 0:
          ((ShadowedSameClassName)instance).same = adapter_same_io_github_nename0_moshi_java_codegen_model_complex_ShadowedSameClassName.fromJson(reader);
          break;
        case 1:
          ((io.github.nename0.moshi.java.codegen.model.complex.other.ShadowedSameClassName)instance).same = adapter_same_io_github_nename0_moshi_java_codegen_model_complex_other_ShadowedSameClassName.fromJson(reader);
          break;
      }
    }
    reader.endObject();
    return instance;
  }

  @Override
  public void toJson(JsonWriter writer, ShadowedSameClassName value) throws IOException {
    writer.beginObject();
    writer.name("renamed");
    adapter_same_io_github_nename0_moshi_java_codegen_model_complex_ShadowedSameClassName.toJson(writer, ((ShadowedSameClassName)value).same);
    writer.name("same");
    adapter_same_io_github_nename0_moshi_java_codegen_model_complex_other_ShadowedSameClassName.toJson(writer, ((io.github.nename0.moshi.java.codegen.model.complex.other.ShadowedSameClassName)value).same);
    writer.endObject();
  }
}
