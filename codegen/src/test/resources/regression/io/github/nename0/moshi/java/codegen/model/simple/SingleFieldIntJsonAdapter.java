// Code generated by moshi-java-codegen. Do not edit.
package io.github.nename0.moshi.java.codegen.model.simple;

import com.squareup.moshi.JsonAdapter;
import com.squareup.moshi.JsonReader;
import com.squareup.moshi.JsonWriter;
import com.squareup.moshi.Moshi;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.SuppressWarnings;
import java.util.Collections;

@SuppressWarnings("unused")
public final class SingleFieldIntJsonAdapter extends JsonAdapter<SingleFieldInt> {
  private static final JsonReader.Options OPTIONS = JsonReader.Options.of("anInt");

  private final JsonAdapter<Integer> adapter_anInt;

  public SingleFieldIntJsonAdapter(Moshi moshi) {
    adapter_anInt = moshi.adapter(int.class, Collections.emptySet(), "anInt");
  }

  @Override
  public SingleFieldInt fromJson(JsonReader reader) throws IOException {
    SingleFieldInt instance = new SingleFieldInt();
    reader.beginObject();
    while (reader.hasNext()) {
      int index = reader.selectName(OPTIONS);
      switch (index) {
        case -1:
          reader.skipName();
          reader.skipValue();
          break;
        case 0:
          ((SingleFieldInt)instance).anInt = adapter_anInt.fromJson(reader);
          break;
      }
    }
    reader.endObject();
    return instance;
  }

  @Override
  public void toJson(JsonWriter writer, SingleFieldInt value) throws IOException {
    writer.beginObject();
    writer.name("anInt");
    adapter_anInt.toJson(writer, ((SingleFieldInt)value).anInt);
    writer.endObject();
  }
}
