// Code generated by moshi-java-codegen. Do not edit.
package io.github.nename0.moshi.java.codegen.model.simple;

import com.squareup.moshi.JsonAdapter;
import com.squareup.moshi.JsonReader;
import com.squareup.moshi.JsonWriter;
import com.squareup.moshi.Moshi;
import java.io.IOException;
import java.lang.Double;
import java.lang.Override;
import java.lang.SuppressWarnings;
import java.util.Collections;

@SuppressWarnings("unused")
public final class ChildGetterJsonAdapter extends JsonAdapter<ChildGetter> {
  private static final JsonReader.Options OPTIONS = JsonReader.Options.of("coordinates");

  private final JsonAdapter<Double> adapter_coordinates;

  public ChildGetterJsonAdapter(Moshi moshi) {
    adapter_coordinates = moshi.adapter(double.class, Collections.emptySet(), "coordinates");
  }

  @Override
  public ChildGetter fromJson(JsonReader reader) throws IOException {
    ChildGetter instance = new ChildGetter();
    reader.beginObject();
    while (reader.hasNext()) {
      int index = reader.selectName(OPTIONS);
      switch (index) {
        case -1:
          reader.skipName();
          reader.skipValue();
          break;
        case 0:
          ((ChildGetter)instance).setCoordinates(adapter_coordinates.fromJson(reader));
          break;
      }
    }
    reader.endObject();
    return instance;
  }

  @Override
  public void toJson(JsonWriter writer, ChildGetter value) throws IOException {
    writer.beginObject();
    writer.name("coordinates");
    adapter_coordinates.toJson(writer, ((ChildGetter)value).getCoordinates());
    writer.endObject();
  }
}
