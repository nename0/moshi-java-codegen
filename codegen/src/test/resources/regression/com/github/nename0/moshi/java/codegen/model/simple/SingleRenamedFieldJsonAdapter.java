// Code generated by moshi-java-codegen. Do not edit.
package com.github.nename0.moshi.java.codegen.model.simple;

import com.squareup.moshi.JsonAdapter;
import com.squareup.moshi.JsonReader;
import com.squareup.moshi.JsonWriter;
import com.squareup.moshi.Moshi;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.SuppressWarnings;
import java.util.Collections;

@SuppressWarnings("unused")
public final class SingleRenamedFieldJsonAdapter extends JsonAdapter<SingleRenamedField> {
  private static final JsonReader.Options OPTIONS = JsonReader.Options.of("boolean");

  private final JsonAdapter<Boolean> adapter_aBoolean;

  public SingleRenamedFieldJsonAdapter(Moshi moshi) {
    adapter_aBoolean = moshi.adapter(boolean.class, Collections.emptySet(), "boolean");
  }

  @Override
  public SingleRenamedField fromJson(JsonReader reader) throws IOException {
    SingleRenamedField instance = new SingleRenamedField();
    reader.beginObject();
    while (reader.hasNext()) {
      int index = reader.selectName(OPTIONS);
      switch (index) {
        case -1:
          reader.skipName();
          reader.skipValue();
          break;
        case 0:
          ((SingleRenamedField)instance).aBoolean = adapter_aBoolean.fromJson(reader);
          break;
      }
    }
    reader.endObject();
    return instance;
  }

  @Override
  public void toJson(JsonWriter writer, SingleRenamedField value) throws IOException {
    writer.beginObject();
    writer.name("boolean");
    adapter_aBoolean.toJson(writer, ((SingleRenamedField)value).aBoolean);
    writer.endObject();
  }
}
